# -*- coding: utf-8 -*-
"""DSproject

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1biuR_pvnu6A5fiyMcFgNSYUlJ-H2p4mh

# **Importing Bulit-in Modules**
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from google.colab import drive

"""# **Mounting Google drive and reading the dataset**"""

drive.mount('/content/drive/')
data=pd.read_csv('/content/drive/MyDrive/project/IMDB-Movie-Data.csv')

"""# **1. Display top 10 rows**"""

data.head(10)

"""# **2. Last 10 rows of the dataset**"""

data.tail(10)

"""# **3. Number of rows and columns in the dataset**"""

data.shape
print("The number of ROWS of the dataset are",data.shape[0])
print("The number of COLUMNS of the dataset are",data.shape[1])

"""# **4. Dealing with null values**

Checking for null values
"""

data.isnull().sum()

"""Droping out the null values"""

data.dropna(axis=0)

"""# **5. Dealing with duplicate values**"""

data.duplicated().any()

"""There are no duplicate values in this data set

# **6. Overall statistics of the dataframe**
"""

data.describe()

"""Since this is statistical analysis it only shows numerical columns

# **7. Movies having runtime of 3 hours and above**
"""

data.columns

data[data['Runtime (Minutes)']>=180] ["Title"]

"""# **8. Statistics of the voters**"""

data.groupby('Year')['Votes'].mean().sort_values(ascending=True)

sns.barplot(x='Year',y='Votes',data=data)
plt.title("Statistics of the revenue")
plt.show

"""# **9. Statistics of the revenue**"""

data.groupby('Year')['Revenue (Millions)'].mean().sort_values(ascending=False)

sns.barplot(x='Year',y='Revenue (Millions)',data=data)
plt.title("Statistics of the revenue")
plt.show

"""# **10. Rating for each director**"""

data.groupby('Director') ['Rating'].mean().sort_values(ascending=False)

"""# **11. Ten lengthy movies with runtime**"""

top10_len=data.nlargest(10,'Runtime (Minutes)')[['Title','Runtime (Minutes)']].set_index('Title')

top10_len

sns.barplot(x='Runtime (Minutes)',y=top10_len.index,data=top10_len)
plt.title('Top 10 lengthy movies')

"""# **12. Number of movies released every year**"""

data['Year'].value_counts()

sns.countplot(x='Year',data=data)
plt.title('Number movies realising per year 2006-2016')
plt.show()

"""# **13. Movie which got the highest revenue**"""

data[data['Revenue (Millions)'].max()==data['Revenue (Millions)']] ['Title']